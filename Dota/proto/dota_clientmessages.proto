syntax = "proto3";

import "dota_commonmessages.proto";
import "dota_shared_enums.proto";

option optimize_for = SPEED;
option cc_generic_services = false;

enum EDotaClientMessages {
	DOTA_CM_Nil = 0;
	DOTA_CM_MapLine = 301;
	DOTA_CM_AspectRatio = 302;
	DOTA_CM_MapPing = 303;
	DOTA_CM_UnitsAutoAttack = 304;
	DOTA_CM_SearchString = 307;
	DOTA_CM_Pause = 308;
	DOTA_CM_ShopViewMode = 309;
	DOTA_CM_SetUnitShareFlag = 310;
	DOTA_CM_SwapRequest = 311;
	DOTA_CM_SwapAccept = 312;
	DOTA_CM_WorldLine = 313;
	DOTA_CM_RequestGraphUpdate = 314;
	DOTA_CM_ItemAlert = 315;
	DOTA_CM_ChatWheel = 316;
	DOTA_CM_SendStatPopup = 317;
	DOTA_CM_BeginLastHitChallenge = 318;
	DOTA_CM_UpdateQuickBuy = 319;
	DOTA_CM_UpdateCoachListen = 320;
	DOTA_CM_CoachHUDPing = 321;
	DOTA_CM_RecordVote = 322;
	DOTA_CM_UnitsAutoAttackAfterSpell = 323;
	DOTA_CM_WillPurchaseAlert = 324;
	DOTA_CM_PlayerShowCase = 325;
	DOTA_CM_TeleportRequiresHalt = 326;
	DOTA_CM_CameraZoomAmount = 327;
	DOTA_CM_BroadcasterUsingCamerman = 328;
	DOTA_CM_BroadcasterUsingAssistedCameraOperator = 329;
	DOTA_CM_EnemyItemAlert = 330;
	DOTA_CM_FreeInventory = 331;
	DOTA_CM_BuyBackStateAlert = 332;
	DOTA_CM_QuickBuyAlert = 333;
	DOTA_CM_HeroStatueLike = 334;
	DOTA_CM_ModifierAlert = 335;
	DOTA_CM_TeamShowcaseEditor = 336;
	DOTA_CM_HPManaAlert = 337;
	DOTA_CM_GlyphAlert = 338;
	DOTA_CM_TeamShowcaseClientData = 339;
	DOTA_CM_PlayTeamShowcase = 340;
	DOTA_CM_EventCNY2015Cmd = 341;
	DOTA_CM_FillEmptySlotsWithBots = 342;
	DOTA_CM_DemoHero = 343;
	DOTA_CM_AbilityLearnModeToggled = 344;
	DOTA_CM_AbilityStartUse = 345;
	DOTA_CM_ChallengeSelect = 346;
	DOTA_CM_ChallengeReroll = 347;
	DOTA_CM_ClickedBuff = 348;
	DOTA_CM_CoinWager = 349;
	DOTA_CM_ExecuteOrders = 350;
	DOTA_CM_XPAlert = 351;
	DOTA_CM_EventPointsTip = 353;
	DOTA_CM_MatchMetadata = 354;
	DOTA_CM_KillMyHero = 355;
	DOTA_CM_QuestStatus = 356;
	DOTA_CM_ToggleAutoattack = 357;
	DOTA_CM_SpecialAbility = 358;
	DOTA_CM_KillcamDamageTaken = 359;
	DOTA_CM_SetEnemyStartingPosition = 360;
	DOTA_CM_SetDesiredWardPlacement = 361;
	DOTA_CM_RollDice = 362;
	DOTA_CM_FlipCoin = 363;
	DOTA_CM_RequestItemSuggestions = 364;
	DOTA_CM_MakeTeamCaptain = 365;
	DOTA_CM_CoinWagerToken = 366;
	DOTA_CM_RankWager = 367;
	DOTA_CM_DismissAllStatPopups = 368;
	DOTA_CM_HelpTipSystemStateChanged = 369;
	DOTA_CM_ChannelRequiresHalt = 370;
	DOTA_CM_RequestBulkCombatLog = 371;
	DOTA_CM_AbilityDraftRequestAbility = 372;
	DOTA_CM_GuideSelectOption = 373;
	DOTA_CM_GuideSelected = 374;
	DOTA_CM_DamageReport = 375;
	DOTA_CM_SalutePlayer = 376;
	DOTA_CM_SprayWheel = 377;
	DOTA_CM_TipAlert = 378;
	DOTA_CM_EmptyTeleportAlert = 379;
	DOTA_CM_RadarAlert = 380;
	DOTA_CM_TalentTreeAlert = 381;
}

message CDOTAClientMsg_MapPing {
	.CDOTAMsg_LocationPing location_ping = 1;
}

message CDOTAClientMsg_ItemAlert {
	.CDOTAMsg_ItemAlert item_alert = 1;
}

//message CDOTAClientMsg_EnemyItemAlert {
//	uint32 item_entindex = 1;
//	int32 rune_type = 2 [default = -1];
//	int32 item_level = 3 [default = -1];
//	int32 primary_charges = 4 [default = -1];
//	int32 secondary_charges = 5 [default = -1];
//}

message CDOTAClientMsg_ModifierAlert {
	int32 buff_internal_index = 1;
	uint32 target_entindex = 2;
}

message CDOTAClientMsg_ClickedBuff {
	int32 buff_internal_index = 1;
	uint32 target_entindex = 2;
}

message CDOTAClientMsg_HPManaAlert {
	uint32 target_entindex = 1;
	bool show_raw_values = 2;
}

message CDOTAClientMsg_GlyphAlert {
	bool negative = 1;
}

message CDOTAClientMsg_RadarAlert {
	bool negative = 1;
}

message CDOTAClientMsg_MapLine {
	.CDOTAMsg_MapLine mapline = 1;
}

message CDOTAClientMsg_AspectRatio {
	float ratio = 1;
}

//message CDOTAClientMsg_UnitsAutoAttackMode {
//	enum EMode {
//		INVALID = -1;
//		NEVER = 0;
//		AFTER_SPELLCAST = 1;
//		ALWAYS = 2;
//	}
//
//	enum EUnitType {
//		NORMAL = 0;
//		SUMMONED = 1;
//	}
//
//	.CDOTAClientMsg_UnitsAutoAttackMode.EMode mode = 1 [default = INVALID];
//	.CDOTAClientMsg_UnitsAutoAttackMode.EUnitType unit_type = 2 [default = NORMAL];
//}

message CDOTAClientMsg_UnitsAutoAttackAfterSpell {
	bool enabled = 1;
}

message CDOTAClientMsg_TeleportRequiresHalt {
	bool enabled = 1;
}

message CDOTAClientMsg_ChannelRequiresHalt {
	bool enabled = 1;
}

message CDOTAClientMsg_SearchString {
	string search = 1;
}

message CDOTAClientMsg_Pause {
}

message CDOTAClientMsg_ShopViewMode {
	uint32 mode = 1;
}

message CDOTAClientMsg_SetUnitShareFlag {
	uint32 playerID = 1;
	uint32 flag = 2;
	bool state = 3;
}

message CDOTAClientMsg_SwapRequest {
	uint32 player_id = 1;
}

message CDOTAClientMsg_SwapAccept {
	uint32 player_id = 1;
}

message CDOTAClientMsg_WorldLine {
	.CDOTAMsg_WorldLine worldline = 1;
}

message CDOTAClientMsg_RequestGraphUpdate {
}

message CDOTAClientMsg_ChatWheel {
	uint32 chat_message_id = 1;
	uint32 param_hero_id = 2;
	uint32 emoticon_id = 3;
}

//message CDOTAClientMsg_SendStatPopup {
//	.CDOTAMsg_SendStatPopup statpopup = 1;
//}

message CDOTAClientMsg_DismissAllStatPopups {
	.CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
}

message CDOTAClientMsg_BeginLastHitChallenge {
	uint32 chosen_lane = 1;
	bool helper_enabled = 2;
}

message CDOTAClientMsg_UpdateQuickBuyItem {
	int32 item_ability_id = 1;
	bool purchasable = 2;
}

message CDOTAClientMsg_UpdateQuickBuy {
	repeated .CDOTAClientMsg_UpdateQuickBuyItem items = 1;
}

message CDOTAClientMsg_RecordVote {
	int32 choice_index = 1;
}

message CDOTAClientMsg_WillPurchaseAlert {
	int32 item_ability_id = 1;
	uint32 gold_remaining = 2;
	int32 suggestion_player_id = 3;
}

message CDOTAClientMsg_BuyBackStateAlert {
}

message CDOTAClientMsg_QuickBuyAlert {
	int32 item_ability_id = 1;
	int32 gold_cost = 2;
	int32 item_cooldown_seconds = 3;
	bool show_buyback = 4;
}

message CDOTAClientMsg_PlayerShowCase {
	bool showcase = 1;
}

message CDOTAClientMsg_CameraZoomAmount {
	float zoom_amount = 1;
}

message CDOTAClientMsg_BroadcasterUsingCameraman {
	bool cameraman = 1;
}

message CDOTAClientMsg_BroadcasterUsingAssistedCameraOperator {
	bool enabled = 1;
}

message CAdditionalEquipSlotClientMsg {
	uint32 class_id = 1;
	uint32 slot_id = 2;
	uint32 def_index = 3;
}

message CDOTAClientMsg_FreeInventory {
	repeated .CAdditionalEquipSlotClientMsg equips = 1;
}

message CDOTAClientMsg_FillEmptySlotsWithBots {
	bool fillwithbots = 1;
}

message CDOTAClientMsg_HeroStatueLike {
	uint32 owner_player_id = 1;
}

message CDOTAClientMsg_EventCNY2015Cmd {
	bytes data = 1;
}

message CDOTAClientMsg_DemoHero {
	int32 hero_id = 1;
	int32 hero_id_to_spawn = 2;
	repeated uint32 item_defs = 3;
	repeated uint64 item_ids = 4;
	uint32 style_index = 5;
	bool keep_existing_demohero = 6;
}

message CDOTAClientMsg_ChallengeSelect {
	uint32 event_id = 1;
	uint32 slot_id = 2;
	uint32 sequence_id = 3;
}

//message CDOTAClientMsg_ChallengeReroll {
//	.EEvent event_id = 1 [default = EVENT_ID_NONE];
//	uint32 slot_id = 2;
//	uint32 sequence_id = 3;
//	uint32 hero_id = 4;
//}

message CDOTAClientMsg_CoinWager {
	uint32 wager_amount = 1;
}

message CDOTAClientMsg_CoinWagerToken {
	uint64 wager_token_item_id = 1;
}

message CDOTAClientMsg_RankWager {
	bool announce_wager = 1;
}

message CDOTAClientMsg_EventPointsTip {
	uint32 recipient_player_id = 1;
}

//message CDOTAClientMsg_ExecuteOrders {
//	repeated .CDOTAMsg_UnitOrder orders = 1;
//}

message CDOTAClientMsg_XPAlert {
	uint32 target_entindex = 1;
	uint32 damage_taken = 2;
}

message CDOTAClientMsg_TalentTreeAlert {
	uint32 target_entindex = 1;
	int32 ability_id = 2;
	int32 slot = 3;
	bool learned = 4;
}

message CDOTAClientMsg_KillcamDamageTaken {
	uint32 target_entindex = 1;
	uint32 damage_taken = 2;
	uint32 item_type = 3;
	uint32 item_ability_id = 4;
	string hero_name = 5;
	string damage_color = 6;
}

message CDOTAClientMsg_MatchMetadata {
	uint64 match_id = 1;
	bytes metadata = 2;
}

message CDOTAClientMsg_KillMyHero {
}

message CDOTAClientMsg_QuestStatus {
	uint32 quest_id = 1;
	uint32 challenge_id = 2;
	uint32 progress = 3;
	uint32 goal = 4;
	uint32 query = 5;
	float fail_gametime = 6;
	uint32 item_ability_id = 7;
}

message CDOTAClientMsg_ToggleAutoattack {
	int32 mode = 1;
	bool show_message = 2;
}

message CDOTAClientMsg_SpecialAbility {
	uint32 ability_index = 1;
	uint32 target_entindex = 2;
}

message CDOTAClientMsg_SetEnemyStartingPosition {
	uint32 enemy_player_id = 1;
	uint32 enemy_starting_position = 2;
}

message CDOTAClientMsg_SetDesiredWardPlacement {
	uint32 ward_index = 1;
	float ward_x = 2;
	float ward_y = 3;
}

message CDOTAClientMsg_RollDice {
	uint32 channel_type = 1;
	uint32 roll_min = 2;
	uint32 roll_max = 3;
}

message CDOTAClientMsg_FlipCoin {
	uint32 channel_type = 1;
}

message CDOTAClientMsg_RequestItemSuggestions {
}

message CDOTAClientMsg_MakeTeamCaptain {
	uint32 player_id = 1;
}

message CDOTAClientMsg_HelpTipSystemStateChanged {
	bool tip_displayed = 1;
}

message CDOTAClientMsg_RequestBulkCombatLog {
	float game_time = 1;
	float duration = 2;
	bool recent_player_death = 3;
	int32 player_id = 4;
}

message CDOTAClientMsg_AbilityDraftRequestAbility {
	uint32 requested_ability_id = 1;
}

message CDOTAClientMsg_GuideSelectOption {
	uint32 option = 1;
	bool force_recalculate = 2;
}

message CDOTAClientMsg_GuideSelected {
	uint64 guide_workshop_id = 1;
	bool is_plus_guide = 2;
}

message CDOTAClientMsg_DamageReport {
	uint32 target_hero_id = 1;
	uint32 source_hero_id = 2;
	int32 damage_amount = 3;
	bool broadcast = 4;
}

message CDOTAClientMsg_SalutePlayer {
	int32 target_player_id = 1;
	int32 event_id = 2;
}

message CDOTAClientMsg_TipAlert {
	string tip_text = 1;
}

message CDOTAClientMsg_EmptyTeleportAlert {
	int32 target_entindex = 1;
}

