// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dota_commonmessages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from dota_commonmessages.proto</summary>
public static partial class DotaCommonmessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for dota_commonmessages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static DotaCommonmessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chlkb3RhX2NvbW1vbm1lc3NhZ2VzLnByb3RvImAKFUNET1RBTXNnX0xvY2F0",
          "aW9uUGluZxIJCgF4GAEgASgFEgkKAXkYAiABKAUSDgoGdGFyZ2V0GAMgASgF",
          "EhMKC2RpcmVjdF9waW5nGAQgASgIEgwKBHR5cGUYBSABKAUiQwoSQ0RPVEFN",
          "c2dfSXRlbUFsZXJ0EgkKAXgYASABKAUSCQoBeRgCIAEoBRIXCg9pdGVtX2Fi",
          "aWxpdHlfaWQYAyABKAUiOQoQQ0RPVEFNc2dfTWFwTGluZRIJCgF4GAEgASgF",
          "EgkKAXkYAiABKAUSDwoHaW5pdGlhbBgDIAEoCCJTChJDRE9UQU1zZ19Xb3Js",
          "ZExpbmUSCQoBeBgBIAEoBRIJCgF5GAIgASgFEgkKAXoYAyABKAUSDwoHaW5p",
          "dGlhbBgEIAEoCBILCgNlbmQYBSABKAgiMwodQ0RPVEFNc2dfRGlzbWlzc0Fs",
          "bFN0YXRQb3B1cHMSEgoKdGltZV9kZWxheRgBIAEoAiI+ChVDRE9UQU1zZ19D",
          "b2FjaEhVRFBpbmcSCQoBeBgBIAEoDRIJCgF5GAIgASgNEg8KB3RndHBhdGgY",
          "AyABKAkqpAEKE0VET1RBU3RhdFBvcHVwVHlwZXMSGAoUa19FRE9UQV9TUFRf",
          "VGV4dGxpbmUQABIVChFrX0VET1RBX1NQVF9CYXNpYxABEhQKEGtfRURPVEFf",
          "U1BUX1BvbGwQAhIUChBrX0VET1RBX1NQVF9HcmlkEAMSGQoVa19FRE9UQV9T",
          "UFRfRHVhbEltYWdlEAQSFQoRa19FRE9UQV9TUFRfTW92aWUQBSqNCgoPZG90",
          "YXVuaXRvcmRlcl90EhgKFERPVEFfVU5JVF9PUkRFUl9OT05FEAASJAogRE9U",
          "QV9VTklUX09SREVSX01PVkVfVE9fUE9TSVRJT04QARIiCh5ET1RBX1VOSVRf",
          "T1JERVJfTU9WRV9UT19UQVJHRVQQAhIfChtET1RBX1VOSVRfT1JERVJfQVRU",
          "QUNLX01PVkUQAxIhCh1ET1RBX1VOSVRfT1JERVJfQVRUQUNLX1RBUkdFVBAE",
          "EiEKHURPVEFfVU5JVF9PUkRFUl9DQVNUX1BPU0lUSU9OEAUSHwobRE9UQV9V",
          "TklUX09SREVSX0NBU1RfVEFSR0VUEAYSJAogRE9UQV9VTklUX09SREVSX0NB",
          "U1RfVEFSR0VUX1RSRUUQBxIiCh5ET1RBX1VOSVRfT1JERVJfQ0FTVF9OT19U",
          "QVJHRVQQCBIfChtET1RBX1VOSVRfT1JERVJfQ0FTVF9UT0dHTEUQCRIhCh1E",
          "T1RBX1VOSVRfT1JERVJfSE9MRF9QT1NJVElPThAKEiEKHURPVEFfVU5JVF9P",
          "UkRFUl9UUkFJTl9BQklMSVRZEAsSHQoZRE9UQV9VTklUX09SREVSX0RST1Bf",
          "SVRFTRAMEh0KGURPVEFfVU5JVF9PUkRFUl9HSVZFX0lURU0QDRIfChtET1RB",
          "X1VOSVRfT1JERVJfUElDS1VQX0lURU0QDhIfChtET1RBX1VOSVRfT1JERVJf",
          "UElDS1VQX1JVTkUQDxIhCh1ET1RBX1VOSVRfT1JERVJfUFVSQ0hBU0VfSVRF",
          "TRAQEh0KGURPVEFfVU5JVF9PUkRFUl9TRUxMX0lURU0QERIkCiBET1RBX1VO",
          "SVRfT1JERVJfRElTQVNTRU1CTEVfSVRFTRASEh0KGURPVEFfVU5JVF9PUkRF",
          "Ul9NT1ZFX0lURU0QExIkCiBET1RBX1VOSVRfT1JERVJfQ0FTVF9UT0dHTEVf",
          "QVVUTxAUEhgKFERPVEFfVU5JVF9PUkRFUl9TVE9QEBUSGQoVRE9UQV9VTklU",
          "X09SREVSX1RBVU5UEBYSGwoXRE9UQV9VTklUX09SREVSX0JVWUJBQ0sQFxIZ",
          "ChVET1RBX1VOSVRfT1JERVJfR0xZUEgQGBIpCiVET1RBX1VOSVRfT1JERVJf",
          "RUpFQ1RfSVRFTV9GUk9NX1NUQVNIEBkSHQoZRE9UQV9VTklUX09SREVSX0NB",
          "U1RfUlVORRAaEiAKHERPVEFfVU5JVF9PUkRFUl9QSU5HX0FCSUxJVFkQGxIl",
          "CiFET1RBX1VOSVRfT1JERVJfTU9WRV9UT19ESVJFQ1RJT04QHBIaChZET1RB",
          "X1VOSVRfT1JERVJfUEFUUk9MEB0SKgomRE9UQV9VTklUX09SREVSX1ZFQ1RP",
          "Ul9UQVJHRVRfUE9TSVRJT04QHhIZChVET1RBX1VOSVRfT1JERVJfUkFEQVIQ",
          "HxIpCiVET1RBX1VOSVRfT1JERVJfU0VUX0lURU1fQ09NQklORV9MT0NLECAS",
          "HAoYRE9UQV9VTklUX09SREVSX0NPTlRJTlVFECESKgomRE9UQV9VTklUX09S",
          "REVSX1ZFQ1RPUl9UQVJHRVRfQ0FOQ0VMRUQQIhIkCiBET1RBX1VOSVRfT1JE",
          "RVJfQ0FTVF9SSVZFUl9QQUlOVBAjEjIKLkRPVEFfVU5JVF9PUkRFUl9QUkVH",
          "QU1FX0FESlVTVF9JVEVNX0FTU0lHTk1FTlQQJEIFSAGAAQBiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EDOTAStatPopupTypes), typeof(global::dotaunitorder_t), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CDOTAMsg_LocationPing), global::CDOTAMsg_LocationPing.Parser, new[]{ "X", "Y", "Target", "DirectPing", "Type" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDOTAMsg_ItemAlert), global::CDOTAMsg_ItemAlert.Parser, new[]{ "X", "Y", "ItemAbilityId" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDOTAMsg_MapLine), global::CDOTAMsg_MapLine.Parser, new[]{ "X", "Y", "Initial" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDOTAMsg_WorldLine), global::CDOTAMsg_WorldLine.Parser, new[]{ "X", "Y", "Z", "Initial", "End" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDOTAMsg_DismissAllStatPopups), global::CDOTAMsg_DismissAllStatPopups.Parser, new[]{ "TimeDelay" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::CDOTAMsg_CoachHUDPing), global::CDOTAMsg_CoachHUDPing.Parser, new[]{ "X", "Y", "Tgtpath" }, null, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EDOTAStatPopupTypes {
  [pbr::OriginalName("k_EDOTA_SPT_Textline")] KEdotaSptTextline = 0,
  [pbr::OriginalName("k_EDOTA_SPT_Basic")] KEdotaSptBasic = 1,
  [pbr::OriginalName("k_EDOTA_SPT_Poll")] KEdotaSptPoll = 2,
  [pbr::OriginalName("k_EDOTA_SPT_Grid")] KEdotaSptGrid = 3,
  [pbr::OriginalName("k_EDOTA_SPT_DualImage")] KEdotaSptDualImage = 4,
  [pbr::OriginalName("k_EDOTA_SPT_Movie")] KEdotaSptMovie = 5,
}

public enum dotaunitorder_t {
  [pbr::OriginalName("DOTA_UNIT_ORDER_NONE")] DotaUnitOrderNone = 0,
  [pbr::OriginalName("DOTA_UNIT_ORDER_MOVE_TO_POSITION")] DotaUnitOrderMoveToPosition = 1,
  [pbr::OriginalName("DOTA_UNIT_ORDER_MOVE_TO_TARGET")] DotaUnitOrderMoveToTarget = 2,
  [pbr::OriginalName("DOTA_UNIT_ORDER_ATTACK_MOVE")] DotaUnitOrderAttackMove = 3,
  [pbr::OriginalName("DOTA_UNIT_ORDER_ATTACK_TARGET")] DotaUnitOrderAttackTarget = 4,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_POSITION")] DotaUnitOrderCastPosition = 5,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_TARGET")] DotaUnitOrderCastTarget = 6,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_TARGET_TREE")] DotaUnitOrderCastTargetTree = 7,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_NO_TARGET")] DotaUnitOrderCastNoTarget = 8,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_TOGGLE")] DotaUnitOrderCastToggle = 9,
  [pbr::OriginalName("DOTA_UNIT_ORDER_HOLD_POSITION")] DotaUnitOrderHoldPosition = 10,
  [pbr::OriginalName("DOTA_UNIT_ORDER_TRAIN_ABILITY")] RainAbility = 11,
  [pbr::OriginalName("DOTA_UNIT_ORDER_DROP_ITEM")] DotaUnitOrderDropItem = 12,
  [pbr::OriginalName("DOTA_UNIT_ORDER_GIVE_ITEM")] DotaUnitOrderGiveItem = 13,
  [pbr::OriginalName("DOTA_UNIT_ORDER_PICKUP_ITEM")] DotaUnitOrderPickupItem = 14,
  [pbr::OriginalName("DOTA_UNIT_ORDER_PICKUP_RUNE")] DotaUnitOrderPickupRune = 15,
  [pbr::OriginalName("DOTA_UNIT_ORDER_PURCHASE_ITEM")] DotaUnitOrderPurchaseItem = 16,
  [pbr::OriginalName("DOTA_UNIT_ORDER_SELL_ITEM")] DotaUnitOrderSellItem = 17,
  [pbr::OriginalName("DOTA_UNIT_ORDER_DISASSEMBLE_ITEM")] DotaUnitOrderDisassembleItem = 18,
  [pbr::OriginalName("DOTA_UNIT_ORDER_MOVE_ITEM")] DotaUnitOrderMoveItem = 19,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO")] DotaUnitOrderCastToggleAuto = 20,
  [pbr::OriginalName("DOTA_UNIT_ORDER_STOP")] DotaUnitOrderStop = 21,
  [pbr::OriginalName("DOTA_UNIT_ORDER_TAUNT")] Aunt = 22,
  [pbr::OriginalName("DOTA_UNIT_ORDER_BUYBACK")] DotaUnitOrderBuyback = 23,
  [pbr::OriginalName("DOTA_UNIT_ORDER_GLYPH")] DotaUnitOrderGlyph = 24,
  [pbr::OriginalName("DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH")] DotaUnitOrderEjectItemFromStash = 25,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_RUNE")] DotaUnitOrderCastRune = 26,
  [pbr::OriginalName("DOTA_UNIT_ORDER_PING_ABILITY")] DotaUnitOrderPingAbility = 27,
  [pbr::OriginalName("DOTA_UNIT_ORDER_MOVE_TO_DIRECTION")] DotaUnitOrderMoveToDirection = 28,
  [pbr::OriginalName("DOTA_UNIT_ORDER_PATROL")] DotaUnitOrderPatrol = 29,
  [pbr::OriginalName("DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION")] DotaUnitOrderVectorTargetPosition = 30,
  [pbr::OriginalName("DOTA_UNIT_ORDER_RADAR")] DotaUnitOrderRadar = 31,
  [pbr::OriginalName("DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK")] DotaUnitOrderSetItemCombineLock = 32,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CONTINUE")] DotaUnitOrderContinue = 33,
  [pbr::OriginalName("DOTA_UNIT_ORDER_VECTOR_TARGET_CANCELED")] DotaUnitOrderVectorTargetCanceled = 34,
  [pbr::OriginalName("DOTA_UNIT_ORDER_CAST_RIVER_PAINT")] DotaUnitOrderCastRiverPaint = 35,
  [pbr::OriginalName("DOTA_UNIT_ORDER_PREGAME_ADJUST_ITEM_ASSIGNMENT")] DotaUnitOrderPregameAdjustItemAssignment = 36,
}

#endregion

#region Messages
public sealed partial class CDOTAMsg_LocationPing : pb::IMessage<CDOTAMsg_LocationPing> {
  private static readonly pb::MessageParser<CDOTAMsg_LocationPing> _parser = new pb::MessageParser<CDOTAMsg_LocationPing>(() => new CDOTAMsg_LocationPing());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CDOTAMsg_LocationPing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DotaCommonmessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_LocationPing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_LocationPing(CDOTAMsg_LocationPing other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    target_ = other.target_;
    directPing_ = other.directPing_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_LocationPing Clone() {
    return new CDOTAMsg_LocationPing(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "target" field.</summary>
  public const int TargetFieldNumber = 3;
  private int target_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Target {
    get { return target_; }
    set {
      target_ = value;
    }
  }

  /// <summary>Field number for the "direct_ping" field.</summary>
  public const int DirectPingFieldNumber = 4;
  private bool directPing_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool DirectPing {
    get { return directPing_; }
    set {
      directPing_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int TypeFieldNumber = 5;
  private int type_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CDOTAMsg_LocationPing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CDOTAMsg_LocationPing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Target != other.Target) return false;
    if (DirectPing != other.DirectPing) return false;
    if (Type != other.Type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Target != 0) hash ^= Target.GetHashCode();
    if (DirectPing != false) hash ^= DirectPing.GetHashCode();
    if (Type != 0) hash ^= Type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (Target != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Target);
    }
    if (DirectPing != false) {
      output.WriteRawTag(32);
      output.WriteBool(DirectPing);
    }
    if (Type != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(Type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (Target != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Target);
    }
    if (DirectPing != false) {
      size += 1 + 1;
    }
    if (Type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CDOTAMsg_LocationPing other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Target != 0) {
      Target = other.Target;
    }
    if (other.DirectPing != false) {
      DirectPing = other.DirectPing;
    }
    if (other.Type != 0) {
      Type = other.Type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
        case 24: {
          Target = input.ReadInt32();
          break;
        }
        case 32: {
          DirectPing = input.ReadBool();
          break;
        }
        case 40: {
          Type = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class CDOTAMsg_ItemAlert : pb::IMessage<CDOTAMsg_ItemAlert> {
  private static readonly pb::MessageParser<CDOTAMsg_ItemAlert> _parser = new pb::MessageParser<CDOTAMsg_ItemAlert>(() => new CDOTAMsg_ItemAlert());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CDOTAMsg_ItemAlert> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DotaCommonmessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_ItemAlert() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_ItemAlert(CDOTAMsg_ItemAlert other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    itemAbilityId_ = other.itemAbilityId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_ItemAlert Clone() {
    return new CDOTAMsg_ItemAlert(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "item_ability_id" field.</summary>
  public const int ItemAbilityIdFieldNumber = 3;
  private int itemAbilityId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ItemAbilityId {
    get { return itemAbilityId_; }
    set {
      itemAbilityId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CDOTAMsg_ItemAlert);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CDOTAMsg_ItemAlert other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (ItemAbilityId != other.ItemAbilityId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (ItemAbilityId != 0) hash ^= ItemAbilityId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (ItemAbilityId != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ItemAbilityId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (ItemAbilityId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemAbilityId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CDOTAMsg_ItemAlert other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.ItemAbilityId != 0) {
      ItemAbilityId = other.ItemAbilityId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
        case 24: {
          ItemAbilityId = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class CDOTAMsg_MapLine : pb::IMessage<CDOTAMsg_MapLine> {
  private static readonly pb::MessageParser<CDOTAMsg_MapLine> _parser = new pb::MessageParser<CDOTAMsg_MapLine>(() => new CDOTAMsg_MapLine());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CDOTAMsg_MapLine> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DotaCommonmessagesReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_MapLine() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_MapLine(CDOTAMsg_MapLine other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    initial_ = other.initial_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_MapLine Clone() {
    return new CDOTAMsg_MapLine(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "initial" field.</summary>
  public const int InitialFieldNumber = 3;
  private bool initial_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Initial {
    get { return initial_; }
    set {
      initial_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CDOTAMsg_MapLine);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CDOTAMsg_MapLine other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Initial != other.Initial) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Initial != false) hash ^= Initial.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (Initial != false) {
      output.WriteRawTag(24);
      output.WriteBool(Initial);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (Initial != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CDOTAMsg_MapLine other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Initial != false) {
      Initial = other.Initial;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
        case 24: {
          Initial = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class CDOTAMsg_WorldLine : pb::IMessage<CDOTAMsg_WorldLine> {
  private static readonly pb::MessageParser<CDOTAMsg_WorldLine> _parser = new pb::MessageParser<CDOTAMsg_WorldLine>(() => new CDOTAMsg_WorldLine());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CDOTAMsg_WorldLine> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DotaCommonmessagesReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_WorldLine() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_WorldLine(CDOTAMsg_WorldLine other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    z_ = other.z_;
    initial_ = other.initial_;
    end_ = other.end_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_WorldLine Clone() {
    return new CDOTAMsg_WorldLine(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private int x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private int y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private int z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "initial" field.</summary>
  public const int InitialFieldNumber = 4;
  private bool initial_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Initial {
    get { return initial_; }
    set {
      initial_ = value;
    }
  }

  /// <summary>Field number for the "end" field.</summary>
  public const int EndFieldNumber = 5;
  private bool end_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool End {
    get { return end_; }
    set {
      end_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CDOTAMsg_WorldLine);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CDOTAMsg_WorldLine other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Z != other.Z) return false;
    if (Initial != other.Initial) return false;
    if (End != other.End) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Z != 0) hash ^= Z.GetHashCode();
    if (Initial != false) hash ^= Initial.GetHashCode();
    if (End != false) hash ^= End.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(Y);
    }
    if (Z != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(Z);
    }
    if (Initial != false) {
      output.WriteRawTag(32);
      output.WriteBool(Initial);
    }
    if (End != false) {
      output.WriteRawTag(40);
      output.WriteBool(End);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
    }
    if (Z != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
    }
    if (Initial != false) {
      size += 1 + 1;
    }
    if (End != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CDOTAMsg_WorldLine other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Z != 0) {
      Z = other.Z;
    }
    if (other.Initial != false) {
      Initial = other.Initial;
    }
    if (other.End != false) {
      End = other.End;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadInt32();
          break;
        }
        case 16: {
          Y = input.ReadInt32();
          break;
        }
        case 24: {
          Z = input.ReadInt32();
          break;
        }
        case 32: {
          Initial = input.ReadBool();
          break;
        }
        case 40: {
          End = input.ReadBool();
          break;
        }
      }
    }
  }

}

public sealed partial class CDOTAMsg_DismissAllStatPopups : pb::IMessage<CDOTAMsg_DismissAllStatPopups> {
  private static readonly pb::MessageParser<CDOTAMsg_DismissAllStatPopups> _parser = new pb::MessageParser<CDOTAMsg_DismissAllStatPopups>(() => new CDOTAMsg_DismissAllStatPopups());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CDOTAMsg_DismissAllStatPopups> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DotaCommonmessagesReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_DismissAllStatPopups() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_DismissAllStatPopups(CDOTAMsg_DismissAllStatPopups other) : this() {
    timeDelay_ = other.timeDelay_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_DismissAllStatPopups Clone() {
    return new CDOTAMsg_DismissAllStatPopups(this);
  }

  /// <summary>Field number for the "time_delay" field.</summary>
  public const int TimeDelayFieldNumber = 1;
  private float timeDelay_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float TimeDelay {
    get { return timeDelay_; }
    set {
      timeDelay_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CDOTAMsg_DismissAllStatPopups);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CDOTAMsg_DismissAllStatPopups other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(TimeDelay, other.TimeDelay)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (TimeDelay != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(TimeDelay);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (TimeDelay != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(TimeDelay);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (TimeDelay != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CDOTAMsg_DismissAllStatPopups other) {
    if (other == null) {
      return;
    }
    if (other.TimeDelay != 0F) {
      TimeDelay = other.TimeDelay;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          TimeDelay = input.ReadFloat();
          break;
        }
      }
    }
  }

}

public sealed partial class CDOTAMsg_CoachHUDPing : pb::IMessage<CDOTAMsg_CoachHUDPing> {
  private static readonly pb::MessageParser<CDOTAMsg_CoachHUDPing> _parser = new pb::MessageParser<CDOTAMsg_CoachHUDPing>(() => new CDOTAMsg_CoachHUDPing());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CDOTAMsg_CoachHUDPing> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::DotaCommonmessagesReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_CoachHUDPing() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_CoachHUDPing(CDOTAMsg_CoachHUDPing other) : this() {
    x_ = other.x_;
    y_ = other.y_;
    tgtpath_ = other.tgtpath_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CDOTAMsg_CoachHUDPing Clone() {
    return new CDOTAMsg_CoachHUDPing(this);
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 1;
  private uint x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "y" field.</summary>
  public const int YFieldNumber = 2;
  private uint y_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public uint Y {
    get { return y_; }
    set {
      y_ = value;
    }
  }

  /// <summary>Field number for the "tgtpath" field.</summary>
  public const int TgtpathFieldNumber = 3;
  private string tgtpath_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Tgtpath {
    get { return tgtpath_; }
    set {
      tgtpath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CDOTAMsg_CoachHUDPing);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CDOTAMsg_CoachHUDPing other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (X != other.X) return false;
    if (Y != other.Y) return false;
    if (Tgtpath != other.Tgtpath) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (X != 0) hash ^= X.GetHashCode();
    if (Y != 0) hash ^= Y.GetHashCode();
    if (Tgtpath.Length != 0) hash ^= Tgtpath.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (X != 0) {
      output.WriteRawTag(8);
      output.WriteUInt32(X);
    }
    if (Y != 0) {
      output.WriteRawTag(16);
      output.WriteUInt32(Y);
    }
    if (Tgtpath.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Tgtpath);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (X != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
    }
    if (Y != 0) {
      size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
    }
    if (Tgtpath.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Tgtpath);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CDOTAMsg_CoachHUDPing other) {
    if (other == null) {
      return;
    }
    if (other.X != 0) {
      X = other.X;
    }
    if (other.Y != 0) {
      Y = other.Y;
    }
    if (other.Tgtpath.Length != 0) {
      Tgtpath = other.Tgtpath;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          X = input.ReadUInt32();
          break;
        }
        case 16: {
          Y = input.ReadUInt32();
          break;
        }
        case 26: {
          Tgtpath = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
